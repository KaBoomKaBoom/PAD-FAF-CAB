services:
  budgeting-service:
    image: andreiberco/pad-budgeting-service:latest
    ports:
      - "8087:8087"
    networks:
      - test-stack_default
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=budgeting_postgres;Port=5432;Database=${BUDGETING_POSTGRES_DB};Username=${BUDGETING_POSTGRES_USER};Password=${BUDGETING_POSTGRES_PASSWORD}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}
      - SERVICE_NAME_FULL={{.Task.Name}}
      - SERVICE_ID={{.Task.ID}}
      - SERVICE_SLOT={{.Task.Slot}}
      - SERVICE_NAME={{.Service.Name}}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  lost-found-service:
    image: andreiberco/pad-l-f-service:latest
    ports:
      - "8086:8086"
    networks:
      - test-stack_default
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=lf_postgres;Port=5432;Database=${LF_POSTGRES_DB};Username=${LF_POSTGRES_USER};Password=${LF_POSTGRES_PASSWORD}
      - NOTIFICATION_SERVICE_URL=${NOTIFICATION_SERVICE_URL}
      - SERVICE_NAME_FULL={{.Task.Name}}
      - SERVICE_ID={{.Task.ID}}
      - SERVICE_SLOT={{.Task.Slot}}
      - SERVICE_NAME={{.Service.Name}}
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  user-management:
    image: russian17/pad-user-management-service:latest
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME_FULL={{.Task.Name}}
    ports:
      - "8080:8080"
    networks:
      - test-stack_default
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  notification-service:
    image: russian17/pad-notification_service:latest
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME_FULL={{.Task.Name}}

    ports:
      - "8081:8081"
    networks:
      - test-stack_default
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  cab-booking-service:
    image: victorrevenco/pad_cab_booking_service:latest
    networks:
      - test-stack_default
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=booking
      - SERVICE_ID={{.Task.ID}}
      - SERVICE_SLOT={{.Task.Slot}}
    entrypoint: /bin/sh -c "export SERVICE_NAME_FULL=$$(hostname -i | awk '{print $$1}') && exec java -jar /app/pad_cab_booking_service.jar"
    volumes:
      - ./src/main/resources/padcabbookingservice-9d6cdadc9671.json:/app/padcabbookingservice-9d6cdadc9671.json:ro
    ports:
      - "8084:8084"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    hostname: "cab-booking-service-{{.Task.Slot}}"

  checkin-service:
    image: victorrevenco/pad_check-in_service:latest
    networks:
      - test-stack_default
    env_file:
      - ./.env
    environment:
      - SERVICE_NAME=checkin
      - SERVICE_ID={{.Task.ID}}
      - SERVICE_SLOT={{.Task.Slot}}
    entrypoint: /bin/sh -c "export SERVICE_NAME_FULL=$$(hostname -i | awk '{print $$1}') && exec java -jar /app/pad_check-in_service.jar"
    ports:
      - "8085:8085"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    hostname: "checkin-service-{{.Task.Slot}}"

  tm-service:
    image: theboogheyman/pad-tea-management-service:latest
    env_file:
      - ./.env
    networks:
      - test-stack_default
    environment:
      - HTTP_PORTS=8082
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - SERVICE_NAME_FULL={{.Task.Name}}
      
    ports:
      - "8082:8082"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  c-service:
    image: theboogheyman/pad-communication-service:latest
    env_file:
      - ./.env
    networks:
      - test-stack_default
    environment:
      - HTTP_PORTS=8083
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      # - SERVICE_DISCOVERY_URL=http://service-discovery:8002/register
      - SERVICE_NAME_FULL={{.Task.Name}}
    ports:
      - "8083:8083"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  adminer:
    image: adminer
    ports:
      - "8090:8080"
    networks:
      - test-stack_default
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  mongo-express:
    image: mongo-express
    ports:
      - "8091:8081"
    networks:
      - test-stack_default
    env_file:
      - ./.env
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://communication_service_root:cyngos-wikpuT-bukmo8@c_mongo:27017/
      ME_CONFIG_BASICAUTH_ENABLED: "true"
      ME_CONFIG_BASICAUTH_USERNAME: communication_service_user
      ME_CONFIG_BASICAUTH_PASSWORD: cyngos-wikpuT-bukmo8
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  s-service:
    image: iulianach/pad-sharing-service:latest
    env_file:
      - ./.env
    networks:
      - test-stack_default
    environment:
      - HTTP_PORTS=8089
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - SERVICE_NAME_FULL={{.Task.Name}}
    ports:
      - "8089:8089"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  fr-service:
    image: iulianach/pad-fund-raising-service:latest
    env_file:
      - ./.env
    environment:
      - HTTP_PORTS=8088
      - ASPNETCORE_ENVIRONMENT=DEVELOPMENT
      - SERVICE_NAME_FULL={{.Task.Name}}
    ports:
      - "8088:8088"
    networks:
      - test-stack_default
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

networks:
  test-stack_default:
    external: true
